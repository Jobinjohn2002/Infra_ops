name: Generate Runbook with Diagram

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate-runbook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip curl fonts-freefont-ttf

          # Install Chrome manually (Puppeteer expects version 131.x)
          wget https://storage.googleapis.com/chrome-for-testing-public/131.0.6778.204/linux64/chrome-linux64.zip
          unzip chrome-linux64.zip
          sudo mv chrome-linux64 /opt/chrome
          echo "Skipping symlink creation; using custom chrome path instead"

          # Install Node and Mermaid CLI
          sudo apt-get install -y npm
          sudo npm install -g @mermaid-js/mermaid-cli

      - name: Generate runbook from Gemini
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          RESPONSE=$(curl -s -X POST "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=$GEMINI_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "contents": [
                {
                  "parts": [
                    {"text": "Generate a detailed Markdown runbook for an Azure WebApp CPU alert and auto-recovery workflow. The alert triggers when CPU usage goes above 10%. The auto-recovery is handled by an Azure Function that restarts the WebApp. Include symptoms, troubleshooting, auto-remediation, and logs sections."}
                  ]
                }
              ]
            }')

          echo "$RESPONSE" > response.json
          RUNBOOK_TEXT=$(echo "$RESPONSE" | jq -r '.candidates[0].content.parts[0].text')
          echo "$RUNBOOK_TEXT" > README.md

      - name: Generate Mermaid diagram from Gemini
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          DIAGRAM_RESPONSE=$(curl -s -X POST "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=$GEMINI_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "contents": [
                {
                  "parts": [
                    {"text": "Generate a Mermaid diagram for an Azure WebApp monitored for high CPU usage. When CPU exceeds 10%, an Azure Monitor alert triggers an Azure Function to restart the WebApp. Include Azure Monitor, Action Group, Function App, App Service, and optional Logic App."}
                  ]
                }
              ]
            }')

          echo "$DIAGRAM_RESPONSE" > diagram_response.json
          echo "$DIAGRAM_RESPONSE" | jq -r '.candidates[0].content.parts[0].text' > diagram.mmd

      - name: Generate PNG from Mermaid
        env:
          MMD_CHROME_ARGS: "--no-sandbox"
        run: |
          mmdc -i diagram.mmd -o diagram.png

      - name: Embed image in README
        run: |
          echo -e "\n## Architecture Diagram\n\n![Diagram](diagram.png)" >> README.md

      - name: Commit and push changes
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add README.md diagram.*
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-generated runbook with diagram image"
            git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
